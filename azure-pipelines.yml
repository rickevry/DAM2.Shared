# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

name: $(majorMinorVersion).$(semanticVersion)

pool:
  vmImage: 'ubuntu-latest'

variables:
  majorMinorVersion: 1.1
  # semanticVersion counter is automatically incremented by one in each execution of pipeline
  # second parameter is seed value to reset to every time the referenced majorMinorVersion is changed
  semanticVersion: $[counter(variables['majorMinorVersion'], 0)]
  projectName: 'DAM2.Shared'
  buildConfiguration: 'Release'
  ArtifactNugetName: 'packages-nuget'


stages:
  - stage: Build
    displayName: Build and publish to nuget
    jobs:
      - job: Create
        displayName: Create nuget package
        steps:
          
        - task: DotNetCoreCLI@2
          displayName: Build
          inputs:
            command: build
            projects: '**/*.csproj'
            arguments: '--configuration $(BuildConfiguration)'
           
        - task: DotNetCoreCLI@2
          displayName: 'dotnet pack [$(BuildConfiguration)]'
          inputs:
            command: 'pack'
            packagesToPack: '**/$(ProjectName)*.csproj'
            packDirectory: '$(Build.ArtifactStagingDirectory)/packages/nuget'
            versioningScheme: byBuildNumber
        
        - publish: '$(Build.ArtifactStagingDirectory)/packages/nuget'
          displayName: 'Publish Artifact: $(ArtifactNugetName)'
          artifact: 'packages-nuget'
          condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest')) 
        # - task: NuGetAuthenticate@0
        #   displayName: 'NuGet Authenticate'
        #   inputs:
        #     nuGetServiceConnections: 'Nuget - DAM2.Shared'
        # - task: NuGetCommand@2
        #   displayName: 'NuGet push'
        #   inputs:
        #     command: push
        #     nuGetFeedType: external
        #     versioningScheme: byEnvVar
        #     versionEnvVar: $(majorMinorVersion).$(semanticVersion)
        
        - download: current
          artifact: '$(ArtifactNugetName)'
          displayName: 'Download nuget packages'

        - task: DotNetCoreCLI@2
          displayName: Push Nuget Package
          inputs:
            command: custom
            custom: nuget
            arguments: >
              push $(Agent.BuildDirectory)/$(ArtifactNugetName)/*.nupkg
              -s https://api.nuget.org/v3/index.json
              -k $(NuGetApiKey) 
    